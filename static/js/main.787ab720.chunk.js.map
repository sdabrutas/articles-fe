{"version":3,"sources":["api.js","ArticleFormModal.js","App.js","serviceWorker.js","index.js"],"names":["pathname","method","params","config","headers","body","JSON","stringify","fetch","then","req","status","json","Error","Overlay","styled","div","MainContainer","ModalHeader","Input","input","TextArea","ArticleFormModal","data","article","setData","hideModal","useState","title","setTitle","setBody","submitting","setSubmitting","isForUpdate","onClick","placeholder","value","onChange","e","target","as","rows","PrimaryBtn","disabled","ind","restOfArticle","api","id","res","copyOfData","alert","catch","userId","defaultProps","Header","header","Content","SearchSection","Dropdown","button","CardsWrapper","Card","CardHeader","CardTitle","h4","CardActionBtn","span","App","fetchStatus","setFetchStatus","dataToDisplay","setDataToDisplay","query","setQuery","searchCategory","setSearchCategory","isFormModalShown","setFormModalDisplay","selectedArticle","setSelectedArticle","useEffect","data-testid","filter","Number","includes","map","key","renderArticles","createPortal","document","getElementById","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.787ab720.chunk.js","sourcesContent":["export default (pathname = '', method = 'GET', params = null) => {\n  const config = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if (params) {\n    config.body = JSON.stringify(params);\n  } \n\n  return fetch(`http://jsonplaceholder.typicode.com/posts${pathname}`, config)\n    .then(req => {\n      if (req.status < 400) return req.json();\n      else throw new Error('Failed to connect');\n    });\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport api from './api';\n\nimport { PrimaryBtn } from './App';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background: rgba(0, 0, 0, 0.2);\n`;\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 360px;\n  padding: 12px 20px;\n  background: #fff;\n  border-radius: 6px;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  height: 56px;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #eee;\n  margin-bottom: 10px;\n\n  > h4 {\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n\n  > span {\n    cursor: pointer;\n  }\n`;\n\nconst Input = styled.input`\n  display: block;\n  height: 36px;\n  border: 1px solid #e6e6e6;\n  border-radius: 5px;\n  padding: 0 12px;\n  outline: 0;\n  font-size: 13px;\n  margin: 5px 0;\n  width: calc(100% - 26px);\n\n  &:focus {\n    border-color: #000;\n  }\n`;\n\nconst TextArea = styled(Input)`\n  height: unset;\n  padding: 12px;\n`;\n\nconst ArticleFormModal = ({ data, article, setData, hideModal }) => {\n  const [title, setTitle] = useState(article ? article.title : '');\n  const [body, setBody] = useState(article ? article.body : '');\n  const [submitting, setSubmitting] = useState(false);\n\n  const isForUpdate = !!article;\n  const onSubmit = () => {\n    setSubmitting(true);\n    if (isForUpdate) {\n      const { ind, ...restOfArticle } = article;\n      const params = { ...restOfArticle, title, body };\n      api(`/${article.id}`, 'PUT', params)\n      .then((res) => {\n        const copyOfData = [...data];\n        copyOfData[ind] = res;\n        setData(copyOfData);\n        alert('Article updated successfully');\n        hideModal();\n      })\n      .catch((e) => {\n        alert(e);\n      });\n    } else {\n      const params = { userId: 1, title, body };\n      api('', 'POST', params)\n      .then((res) => {\n        setData([...data, { id: res.id, ...params }]);\n        alert('Article added successfully');\n        hideModal();\n      })\n      .catch((e) => {\n        alert(e);\n      });\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <>\n      <Overlay />\n      <MainContainer>\n        <ModalHeader>\n          <h4>{isForUpdate ? 'Update' : 'Create'} Article</h4>\n          <span onClick={() => hideModal()}>x</span>\n        </ModalHeader>\n        <Input placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} />\n        <TextArea\n          as=\"textarea\"\n          rows=\"5\"\n          placeholder=\"Body\"\n          value={body}\n          onChange={e => setBody(e.target.value)}\n        />\n        <PrimaryBtn disabled={submitting} onClick={onSubmit}>\n          {submitting ? 'Submitting...' : 'Submit'}\n        </PrimaryBtn>\n      </MainContainer>\n    </>\n  );\n};\n\nconst articleShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  ind: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n});\n\nArticleFormModal.propTypes = {\n  article: articleShape,\n  setData: PropTypes.func.isRequired,\n  hideModal: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(articleShape),\n};\n\nArticleFormModal.defaultProps = {\n  article: null,\n  data: [],\n};\n\nexport default ArticleFormModal;\n","import React, { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\nimport api from './api';\nimport ArticleFormModal from './ArticleFormModal';\n\nconst MainContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  background: #eee;\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  height: 60px;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n  background: #fff;\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  width: 100%;\n  overflow-y: auto;\n  padding: 30px 50px;\n\n  > h2 {\n    margin-block-start: 0;\n    margin-block-end: 0;\n  }\n`;\n\nconst SearchSection = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 30px;\n`;\n\nconst Input = styled.input`\n  border: 1px solid #e6e6e6;\n  border-radius: 5px;\n  height: 40px;\n  line-height: 40px;\n  width: 250px;\n  padding: 0 12px;\n  outline: 0;\n  font-size: 16px;\n  margin-right: 10px;\n\n  &:focus {\n    border-color: #000;\n  }\n`;\n\nconst Dropdown = styled(Input)`\n  width: 150px;\n  background: #fff;\n`;\n\nexport const PrimaryBtn = styled.button`\n  height: 40px;\n  line-height: 40px;\n  color: #fff;\n  background: #f85959;\n  border-color: #f85959;\n  border-radius: 5px;\n  padding: 0 20px;\n  font-size: 18px;\n  cursor: pointer;\n\n  &:hover {\n    background: #ea4444;\n  }\n`;\n\nconst CardsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Card = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-width: 300px;\n  padding: 10px 15px;\n  margin: 12px;\n  background: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n  padding: 0 15px;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 50px;\n  line-height: 50px;\n  border-bottom: 1px solid #eee;\n`;\n\nconst CardTitle = styled.h4`\n  font-size: 16px;\n  white-space: nowrap;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  margin-block-start: 0;\n  margin-block-end: 0;\n`;\n\nconst CardActionBtn = styled.span`\n  cursor: pointer;\n  font-size: 11px;\n  margin-left: 8px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [fetchStatus, setFetchStatus] = useState(null);\n  const [dataToDisplay, setDataToDisplay] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchCategory, setSearchCategory] = useState('');\n  const [isFormModalShown, setFormModalDisplay] = useState(false);\n  const [selectedArticle, setSelectedArticle] = useState(null);\n\n  useEffect(() => {\n    setFetchStatus('fetching');\n    api()\n      .then((res) => {\n        setData(res);\n        setDataToDisplay(res);\n        setFetchStatus('success');\n      })\n      .catch((e) => {\n        alert(e);\n        setFetchStatus('failed');\n      });\n  }, []);\n\n  const renderArticles = () => {\n    switch (fetchStatus) {\n      case 'success':\n        return dataToDisplay.map((article, ind) => (\n          <Card key={article.id}>\n            <CardHeader>\n              <CardTitle title={article.title}>{article.title}</CardTitle>\n              <CardActionBtn\n                onClick={() => {\n                  setSelectedArticle({ ...article, ind });\n                  setFormModalDisplay(true);\n                }}\n              >\n                Edit\n              </CardActionBtn>\n            </CardHeader>\n            <p>{article.body}</p>\n          </Card>\n        ));\n      case 'failed':\n        return <div>Failed to fetch articles</div>;\n      case 'fetching':\n        return <div>Loading...</div>\n      default:\n        return <div />;\n    }\n  };\n\n  const searchArticles = () => {\n    if (!searchCategory || !query) return;\n    if (searchCategory === 'userId' || searchCategory === 'id') {\n      setDataToDisplay(data.filter(article => article[searchCategory] === Number(query)));\n    } else {\n      setDataToDisplay(data.filter(({ title }) => title.includes(query)));\n    }\n  };\n\n  return (\n    <MainContainer data-testid=\"articles-container\">\n      <Header>\n        <h1>All Articles</h1>\n        <span>Hello, User!</span>\n      </Header>\n      <Content>\n        <SearchSection>\n          <span>\n            <Input placeholder=\"Search\" value={query} onChange={e => setQuery(e.target.value)} />\n            <Dropdown as=\"select\" value={searchCategory} onChange={e => setSearchCategory(e.target.value)}>\n              <option value=\"\">Search by</option>\n              <option value=\"id\">ID</option>\n              <option value=\"userId\">User ID</option>\n              <option value=\"title\">Title</option>\n            </Dropdown>\n            <PrimaryBtn onClick={() => searchArticles()}>Search</PrimaryBtn>\n          </span>\n          <PrimaryBtn\n            onClick={() => {\n              setFormModalDisplay(true);\n            }}\n          >\n            Add\n          </PrimaryBtn>\n        </SearchSection>\n        <CardsWrapper>\n          {renderArticles()}\n        </CardsWrapper>\n      </Content>\n      {isFormModalShown && createPortal((\n        <ArticleFormModal\n          article={selectedArticle}\n          setData={setData}\n          hideModal={() => {\n            setFormModalDisplay(false);\n            setSelectedArticle(null);\n          }}\n          data={data}\n        />\n      ), document.getElementById('modal-container'))}\n    </MainContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}